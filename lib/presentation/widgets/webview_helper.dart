import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:webview_flutter/webview_flutter.dart';

/// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å WebView –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
class WebViewHelper {
  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ WebView –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  static Future<bool> isWebViewSupported() async {
    try {
      // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      final controller = WebViewController();
      await controller.setJavaScriptMode(JavaScriptMode.unrestricted);
      return true;
    } catch (e) {
      debugPrint('WebView –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: $e');
      return false;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ User Agent –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å RPM
  static String getUserAgent() {
    if (defaultTargetPlatform == TargetPlatform.iOS) {
      return 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1';
    } else if (defaultTargetPlatform == TargetPlatform.android) {
      return 'Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.120 Mobile Safari/537.36';
    } else {
      return 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.120 Safari/537.36';
    }
  }

  /// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WebViewController –¥–ª—è RPM
  static Future<WebViewController> createRPMWebViewController({
    required NavigationDelegate navigationDelegate,
    required Function(JavaScriptMessage) onMessageReceived,
  }) async {
    final controller = WebViewController();

    await controller.setJavaScriptMode(JavaScriptMode.unrestricted);
    await controller.setUserAgent(getUserAgent());
    await controller.setNavigationDelegate(navigationDelegate);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª –¥–ª—è JavaScript —Å–æ–æ–±—â–µ–Ω–∏–π
    await controller.addJavaScriptChannel(
      'FlutterApp',
      onMessageReceived: onMessageReceived,
    );

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if (defaultTargetPlatform == TargetPlatform.android) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Android
      debugPrint('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebView –¥–ª—è Android');
    } else if (defaultTargetPlatform == TargetPlatform.iOS) {
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è iOS
      debugPrint('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebView –¥–ª—è iOS');
    }

    return controller;
  }

  /// JavaScript –∫–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Ready Player Me
  static String getRPMIntegrationScript() {
    return '''
    (function() {
      console.log('üöÄ RPM Integration Script Loading...');
      
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Flutter
      function sendToFlutter(data) {
        try {
          if (window.FlutterApp && window.FlutterApp.postMessage) {
            const message = JSON.stringify(data);
            window.FlutterApp.postMessage(message);
            console.log('‚úÖ Message sent to Flutter:', data);
            return true;
          } else {
            console.error('‚ùå FlutterApp channel not found');
            return false;
          }
        } catch (error) {
          console.error('‚ùå Error sending message to Flutter:', error);
          return false;
        }
      }
      
      // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
      window.addEventListener('error', function(event) {
        console.error('Page error:', event.error);
        sendToFlutter({
          eventName: 'page.error',
          data: { error: event.error.message, source: event.filename, line: event.lineno },
          source: 'window'
        });
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Ready Player Me
      window.addEventListener('message', function(event) {
        console.log('üì® RPM Message received:', event);
        
        if (!event.data) {
          console.log('üì≠ Empty message data');
          return;
        }
        
        try {
          let data = event.data;
          
          // –ü–∞—Ä—Å–∏–º JSON –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          if (typeof data === 'string' && data.startsWith('{')) {
            try {
              data = JSON.parse(data);
            } catch (parseError) {
              console.log('üìù Data is not JSON, treating as string');
            }
          }
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
          const eventName = data.eventName || data.type || 'unknown';
          console.log('üéØ Event type:', eventName);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Flutter
          const success = sendToFlutter({
            eventName: eventName,
            data: data.data || data,
            source: 'rpm',
            timestamp: Date.now(),
            originalEvent: data
          });
          
          if (!success) {
            console.error('‚ùå Failed to send event to Flutter');
          }
          
        } catch (error) {
          console.error('‚ùå Error processing RPM event:', error);
          sendToFlutter({
            eventName: 'error',
            data: { error: error.message, originalData: event.data },
            source: 'rpm'
          });
        }
      });
      
      // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ postMessage –≤—ã–∑–æ–≤—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      const originalPostMessage = window.postMessage;
      window.postMessage = function(message, targetOrigin) {
        console.log('üì§ PostMessage intercepted:', message);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Flutter –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        sendToFlutter({
          eventName: 'postMessage.intercepted',
          data: message,
          source: 'window',
          targetOrigin: targetOrigin
        });
        
        return originalPostMessage.call(this, message, targetOrigin);
      };
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å Ready Player Me
      function checkRPMReady() {
        const iframe = document.querySelector('iframe');
        if (iframe) {
          console.log('üéØ RPM iframe found');
          sendToFlutter({
            eventName: 'rpm.iframe.found',
            data: { src: iframe.src },
            source: 'integration'
          });
        } else {
          console.log('‚è≥ RPM iframe not found yet, checking again...');
          setTimeout(checkRPMReady, 1000);
        }
      }
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º Flutter –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
      setTimeout(() => {
        sendToFlutter({
          eventName: 'integration.ready',
          data: { 
            status: 'ready', 
            url: window.location.href,
            userAgent: navigator.userAgent,
            timestamp: Date.now()
          },
          source: 'integration'
        });
        
        // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É RPM
        checkRPMReady();
      }, 500);
      
      console.log('‚úÖ RPM Integration Script Loaded Successfully');
    })();
    ''';
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ URL –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–ª—è Ready Player Me
  static bool isValidRPMUrl(String url) {
    try {
      final uri = Uri.parse(url);
      return uri.host.contains('readyplayer.me') ||
          uri.host.contains('models.readyplayer.me');
    } catch (e) {
      return false;
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∞—Å–Ω–æ–≥–æ URL –¥–ª—è Ready Player Me
  static String getFallbackRPMUrl() {
    return 'https://demo.readyplayer.me/avatar?frameApi&bodyType=fullbody';
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ WebView
  static String getErrorMessage(WebResourceError error) {
    switch (error.errorType) {
      case WebResourceErrorType.hostLookup:
        return '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É Ready Player Me. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
      case WebResourceErrorType.timeout:
        return '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
      case WebResourceErrorType.connect:
        return '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É.';
      case WebResourceErrorType.unknown:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Ready Player Me.';
      default:
        return '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.description}';
    }
  }

  /// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  static Map<String, dynamic> getDiagnosticInfo() {
    return {
      'platform': defaultTargetPlatform.toString(),
      'isWeb': kIsWeb,
      'debug': kDebugMode,
      'userAgent': getUserAgent(),
      'timestamp': DateTime.now().toIso8601String(),
    };
  }
}
